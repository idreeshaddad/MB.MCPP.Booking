// <auto-generated />
using System;
using MB.MCPP.BK.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.MCPP.BK.EfCore.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    partial class BookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("UploaderImageSequence");

            modelBuilder.Entity("AddonVilla", b =>
                {
                    b.Property<int>("AddonsId")
                        .HasColumnType("int");

                    b.Property<int>("VillasId")
                        .HasColumnType("int");

                    b.HasKey("AddonsId", "VillasId");

                    b.HasIndex("VillasId");

                    b.ToTable("AddonVilla");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Addons.Addon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Addons");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookingStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfOccupants")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VillaId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.UploaderImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [UploaderImageSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("UploaderImages", (string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Villas.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NumberOfOccupants")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Villas");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Addons.AddonImage", b =>
                {
                    b.HasBaseType("MB.MCPP.BK.Entities.UploaderImage");

                    b.Property<int>("AddonId")
                        .HasColumnType("int");

                    b.HasIndex("AddonId");

                    b.ToTable("AddonImages", (string)null);
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Customers.CustomerImage", b =>
                {
                    b.HasBaseType("MB.MCPP.BK.Entities.UploaderImage");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CustomerImages", (string)null);
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Villas.VillaImage", b =>
                {
                    b.HasBaseType("MB.MCPP.BK.Entities.UploaderImage");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaImages", (string)null);
                });

            modelBuilder.Entity("AddonVilla", b =>
                {
                    b.HasOne("MB.MCPP.BK.Entities.Addons.Addon", null)
                        .WithMany()
                        .HasForeignKey("AddonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.MCPP.BK.Entities.Villas.Villa", null)
                        .WithMany()
                        .HasForeignKey("VillasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Booking", b =>
                {
                    b.HasOne("MB.MCPP.BK.Entities.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.MCPP.BK.Entities.Villas.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Addons.AddonImage", b =>
                {
                    b.HasOne("MB.MCPP.BK.Entities.Addons.Addon", null)
                        .WithMany("Images")
                        .HasForeignKey("AddonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Customers.CustomerImage", b =>
                {
                    b.HasOne("MB.MCPP.BK.Entities.Customers.Customer", null)
                        .WithMany("Images")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Villas.VillaImage", b =>
                {
                    b.HasOne("MB.MCPP.BK.Entities.Villas.Villa", null)
                        .WithMany("Images")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Addons.Addon", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Customers.Customer", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("MB.MCPP.BK.Entities.Villas.Villa", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
